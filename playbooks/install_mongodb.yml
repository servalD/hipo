---
- name: Install Mongodb
  hosts: frontend
  # roles:
  #        - mongodb_repository
  #        - mongodb_install
  tasks:

    - name: Import the public key used by the package management system for mongodb installation 
      ansible.builtin.shell:
        cmd: wget -qO - https://www.mongodb.org/static/pgp/server-7.0.asc |  gpg --dearmor | sudo tee /usr/share/keyrings/mongodb.gpg > /dev/null
      tags:  ["all", "mongo"]

    - name: Tell to apt where to find mongodb-org repo securely
      ansible.builtin.shell:
        cmd: echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
      tags:  ["all", "mongo"]

    - name: "Install mongodb-org"
      become: true
      apt:
        update_cache: yes
        name: mongodb-org
        state: present
      tags:  ["all", "mongo"]

    - name: Templating and overwriting mongo configuration file
      become: true
      ansible.builtin.template:
        src: ../files/mongod.conf.j2
        dest: /etc/mongod.conf
        mode: 0600
        force: false

    - name: Start mongod service unit
      become: true
      ansible.builtin.systemd_service:
        daemon_reload: true
        state: started
        name: mongod
        scope: "system"
      tags:  ["all", "mongo", "service"]

    - name: Waits for db port up
      ansible.builtin.wait_for:
        host: "{{ MONGO.IP }}"
        port: "{{ MONGO.PORT }}"
      tags:  ["all", "mongo", "service"]

    - name: Install pymongo python package collection requirement
      ansible.builtin.pip:
        name: pymongo
        extra_args: --break-system-packages
    
    - name: Add user, db and define their roles
      community.mongodb.mongodb_user:
        # login_database: admin# Not working
        login_host: "localhost"
        login_port: "{{ MONGO.PORT }}"
        database: "{{ MONGO.DB_NAME }}"
        name: "{{ MONGO.USER }}"
        password: "{{ MONGO.PASSWORD }}"
        roles: readWrite
        state: present
      tags: ["user"]

    - name: Copy db backup script
      ansible.builtin.copy:
        src: ../services/backup_script.sh
        dest: /tmp/backup_script.sh
        mode: 0755
      tags:  ["all", "service"]

    - name: Creates directory for backup file
      become: true
      ansible.builtin.file:
        path: /root/database/backup
        state: directory
      tags: [ "all", "service" ]

    - name: CRON on backup script
      become: true
      ansible.builtin.cron:
        day: "15"
        hour: "2"
        minute: "35"
        name: "backup script"
        job: "/tmp/backup_script.sh"
        user: root
      tags: [ "all", "service" ]
